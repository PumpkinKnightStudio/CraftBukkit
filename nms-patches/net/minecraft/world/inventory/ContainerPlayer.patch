--- a/net/minecraft/world/inventory/ContainerPlayer.java
+++ b/net/minecraft/world/inventory/ContainerPlayer.java
@@ -11,6 +11,12 @@
 import net.minecraft.world.item.crafting.IRecipe;
 import net.minecraft.world.item.enchantment.EnchantmentManager;
 
+// CraftBukkit start
+import net.minecraft.network.chat.ChatMessage;
+import org.bukkit.craftbukkit.inventory.CraftInventoryCrafting;
+import org.bukkit.craftbukkit.inventory.CraftInventoryView;
+// CraftBukkit end
+
 public class ContainerPlayer extends ContainerRecipeBook<InventoryCrafting> {
 
     public static final MinecraftKey c = new MinecraftKey("textures/atlas/blocks.png");
@@ -21,15 +27,28 @@
     public static final MinecraftKey h = new MinecraftKey("item/empty_armor_slot_shield");
     private static final MinecraftKey[] j = new MinecraftKey[]{ContainerPlayer.g, ContainerPlayer.f, ContainerPlayer.e, ContainerPlayer.d};
     private static final EnumItemSlot[] k = new EnumItemSlot[]{EnumItemSlot.HEAD, EnumItemSlot.CHEST, EnumItemSlot.LEGS, EnumItemSlot.FEET};
-    private final InventoryCrafting craftInventory = new InventoryCrafting(this, 2, 2);
-    private final InventoryCraftResult resultInventory = new InventoryCraftResult();
+    // CraftBukkit start
+    private final InventoryCrafting craftInventory;
+    private final InventoryCraftResult resultInventory;
+    // CraftBukkit end
     public final boolean i;
     private final EntityHuman owner;
+    // CraftBukkit start
+    private CraftInventoryView bukkitEntity = null;
+    private PlayerInventory player;
+    // CraftBukkit end
 
     public ContainerPlayer(PlayerInventory playerinventory, boolean flag, EntityHuman entityhuman) {
         super((Containers) null, 0);
         this.i = flag;
         this.owner = entityhuman;
+        // CraftBukkit start
+        this.resultInventory = new InventoryCraftResult(); // CraftBukkit - moved to before InventoryCrafting construction
+        this.craftInventory = new InventoryCrafting(this, 2, 2, playerinventory.player); // CraftBukkit - pass player
+        this.craftInventory.resultInventory = this.resultInventory; // CraftBukkit - let InventoryCrafting know about its result slot
+        this.player = playerinventory; // CraftBukkit - save player
+        setTitle(new ChatMessage("container.crafting")); // SPIGOT-4722: Allocate title for player inventory
+        // CraftBukkit end
         this.a((Slot) (new SlotResult(playerinventory.player, this.craftInventory, this.resultInventory, 0, 154, 28)));
 
         int i;
@@ -96,7 +115,7 @@
 
     @Override
     public void a(IInventory iinventory) {
-        ContainerWorkbench.a(this.windowId, this.owner.world, this.owner, this.craftInventory, this.resultInventory);
+        ContainerWorkbench.a(this.windowId, this.owner.world, this.owner, this.craftInventory, this.resultInventory, this); // CraftBukkit
     }
 
     @Override
@@ -203,4 +222,17 @@
     public InventoryCrafting j() {
         return this.craftInventory;
     }
+
+    // CraftBukkit start
+    @Override
+    public CraftInventoryView getBukkitView() {
+        if (bukkitEntity != null) {
+            return bukkitEntity;
+        }
+
+        CraftInventoryCrafting inventory = new CraftInventoryCrafting(this.craftInventory, this.resultInventory);
+        bukkitEntity = new CraftInventoryView(this.player.player.getBukkitEntity(), inventory, this);
+        return bukkitEntity;
+    }
+    // CraftBukkit end
 }
